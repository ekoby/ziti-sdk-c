name: C/C++ CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: ${{ matrix.spec.name }}
    runs-on: ${{ matrix.spec.runner }}
    env:
      BUILD_NUMBER: ${{ github.run_number }}
    strategy:
      fail-fast: false
      matrix:
        spec:
#        - { name: 'Linux x86_64', runner: 'ubuntu-18.04' }
#        - { name: 'Linux ARM', runner: 'ubuntu-18.04', toolchain: 'Linux-arm', no_tests: 'true' }
#        - { name: 'MacOS x86_64', runner: 'macOS-10.15' }
#        - { name: 'MacOS arm64', runner: 'macOS-11', toolchain:  'macOS-arm64', no_tests: 'true' }
#        - { name: 'Windows x86_64', runner: 'windows-2019' }
        - { name: 'Windows arm64', runner: 'windows-2019', win_sdk: 'amd64_arm64', no_tests: 'true' }

    steps:
      - name: Install Crossbuild tools
        if: matrix.spec.runner == 'ubuntu-18.04'
        run: |
          sudo apt update -y
          sudo apt install -y crossbuild-essential-armhf crossbuild-essential-arm64

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          echo "BUILD_NUMBER = ${BUILD_NUMBER}"
          cmake -E make_directory ${{ runner.workspace }}/build

      - name: setup Win SDK
        if: matrix.spec.win_sdk != ''
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.spec.win_sdk }}

      - name: setup/build CMake on ${{ matrix.spec.win_sdk }}
        if: matrix.spec.win_sdk != ''
        env:
          TOOLCHAIN: ${{ matrix.spec.toolchain && format('{0}/toolchains/{1}.cmake', github.workspace, matrix.spec.toolchain) || '' }}
        run: |
          echo   cmake -DCMAKE_TOOLCHAIN_FILE="${TOOLCHAIN}" -S ${{ github.workspace }} -B ${{runner.workspace}}/build
          cmake -DCMAKE_TOOLCHAIN_FILE="${TOOLCHAIN}" -S ${{ github.workspace }} -B ${{runner.workspace}}/build
          cmake --build ${{runner.workspace}}/build

      - name: setup/build CMake
        env:
          TOOLCHAIN: ${{ matrix.spec.toolchain && format('{0}/toolchains/{1}.cmake', github.workspace, matrix.spec.toolchain) || '' }}
        run: |
          echo   cmake -DCMAKE_TOOLCHAIN_FILE="${TOOLCHAIN}" -S ${{ github.workspace }} -B ${{runner.workspace}}/build
          cmake -DCMAKE_TOOLCHAIN_FILE="${TOOLCHAIN}" -S ${{ github.workspace }} -B ${{runner.workspace}}/build
          cmake --build ${{runner.workspace}}/build

      - name: test
        if: matrix.spec.no_tests != 'true'
        working-directory: ${{runner.workspace}}/build
        run: ctest -VV --no-compress-output

      - name: make artifacts
        run: cmake --build ${{runner.workspace}}/build --target ziti-prox-c --target package

      - name: upload artifacts
        if: matrix.spec.upload != 'false'
        uses: actions/upload-artifact@v3
        with:
          name: ziti-prox-c-${{ matrix.spec.toolchain || runner.os }}
          path: ${{ runner.workspace }}/build/programs/ziti-prox-c/ziti-prox-c${{ runner.os == 'Windows' && '.exe' || '' }}
      - name: upload SDK artifacts
        if: matrix.upload != 'false'
        uses: actions/upload-artifact@v3
        with:
          name: ziti-sdk-${{ matrix.spec.toolchain || runner.os }}
          path: ${{ runner.workspace }}/build/package/ziti-sdk-*
